.TH optionLoadLine 3 2010-05-08 "" "Programmer's Manual"
.\"  DO NOT EDIT THIS FILE   (optionLoadLine.3)
.\"  
.\"  It has been AutoGen-ed  May , 2010 at  by AutoGen 5.10.1
.\"  From the definitions    ./funcs.def
.\"  and the template file   agman3.tpl
.\"
.SH NAME
optionLoadLine - process a string for an option name and value
.sp 1
.SH SYNOPSIS

#include <\fIyour-opts.h\fP>
.br
cc [...] -o outfile infile.c -lopts [...]
.sp 1
void \fBoptionLoadLine\fP(tOptions* \fIpOpts\fP, char const* \fIpzLine\fP);
.sp 1
.SH DESCRIPTION
This is a client program callable routine for setting options from, for
example, the contents of a file that they read in.  Only one option may
appear in the text.  It will be treated as a normal (non-preset) option.

When passed a pointer to the option struct and a string, it will find
the option named by the first token on the string and set the option
argument to the remainder of the string.  The caller must NUL terminate
the string.  Any embedded new lines will be included in the option
argument.  If the input looks like one or more quoted strings, then the
input will be "cooked".  The "cooking" is identical to the string
formation used in AutoGen definition files (@pxref{basic expression}),
except that you may not use backquotes.
.TP
.IR pOpts
program options descriptor
.TP
.IR pzLine
NUL-terminated text
.sp 1
.SH ERRORS
Invalid options are silently ignored.  Invalid option arguments
will cause a warning to print, but the function should return.
.SH SEE ALSO
The \fIinfo\fP documentation for the \fI-lopts\fP library.
.br
ao_string_tokenize(3), configFileLoad(3), optionFileLoad(3), optionFindNextValue(3), optionFindValue(3), optionFree(3), optionGetValue(3), optionNextValue(3), optionOnlyUsage(3), optionProcess(3), optionRestore(3), optionSaveFile(3), optionSaveState(3), optionUnloadNested(3), optionVersion(3), pathfind(3), strequate(3), streqvcmp(3), streqvmap(3), strneqvcmp(3), strtransform(3),
