.TH GETDEFS 1  "(GNU AutoGen 1.4)" "Programmer's Manual"
.\"  DO NOT EDIT THIS FILE   (getdefs.1)
.\"  
.\"  It has been AutoGen-ed  May , 2010 at  by AutoGen 5.10.1
.\"  From the definitions    ./opts.def
.\"  and the template file   agman1
.\"
.SH NAME
getdefs \- AutoGen Definition Extraction Tool
.SH SYNOPSIS
.B getdefs
.\" All arguments are named options.
.RI [ opt-name "[\fB=\fP" value ]]...
.PP
All arguments are named options.
.PP
If no \fBinput\fP argument is provided or is set to simply "-", and if
\fBstdin\fP is not a \fBtty\fP, then the list of input files will be
read from \fBstdin\fP.
.SH "DESCRIPTION"
This manual page briefly documents the \fBgetdefs\fP command.
This program extracts \fBAutoGen\fP definitions from a list of
source files.  Definitions are delimited by "/*=<entry-type>
<entry-name>\n" and "=*/\n".  From that, this program creates
a definition of the following form:

    #line nnn "source-file-name"
    entry_type = {
        name = entry_name;
        ...
    };

The ellipsis `...' is filled in by text found between the two
delimiters, with everything up through the first sequence of
asterisks deleted on every line.  Additionally, if the
`<entry-name>' is followed by a comma, the word `ifdef' (or
`ifndef') and a name `if_name', then the above entry will
appear as:

.nf
.na
    #ifdef if_name
    #line nnn "source-file-name"
    entry_type = {
        name = entry_name;
        ...
    };
    #endif

There are two special \(lqentry types\(rq:

*   The entry_type enclosure and the name entry will be omitted
    and the ellipsis will become top-level definitions.

--  The contents of the comment must be a single getdefs option.
    The option name must follow the double hyphen and its argument
    will be everything following the name.  This is intended for use
    with the \fBsubblock\fP and \fBlistattr\fP options.
.SH OPTIONS
.TP
.BR defs-to-get  "=" \fIreg-ex\fP
Regexp to look for after the "/*=".
.sp
If you want definitions only from a particular category, or even
with names matching particular patterns, then specify this regular
expression for the text that must follow the \fB/*=\fP.
.TP
.BR ordering  [ =\fIfile-name\fP], " \fBno-ordering\fP"
Alphabetize or use named file.
The \fIno-ordering\fP form will disable the option.
This option is enabled by default.
.sp
By default, ordering is alphabetical by the entry name.  Use,
\fBno-ordering\fP if order is unimportant.  Use \fBordering\fP
with no argument to order without case sensitivity.  Use
\fBordering=<file-name>\fP if chronological order is important.
getdefs will maintain the text content of \fBfile-name\fP.
\fBfile-name\fP need not exist.
.TP
.BR first-index  "=" \fIfirst-index\fP
The first index to apply to groups.
This option takes an integer number as its argument.
The default \fIfirst-index\fP for this option is:
.ti +4
 0
.sp
By default, the first occurrence of a named definition will have an
index of zero.  Sometimes, that needs to be a reserved value.  Provide
this option to specify a different starting point.
.TP
.BR input  "=" \fIsrc-file\fP
Input file to search for defs.
This option may appear an unlimited number of times.
This option is the default option.
.sp
All files that are to be searched for definitions must be named on
the command line or read from \fBstdin\fP.  If there is only one
\fBinput\fP option and it is the string, "-", then the input file
list is read from \fBstdin\fP.  If a command line argument is not
an option name and does not contain an assignment operator
(\fB=\fP), then it defaults to being an input file name.
At least one input file must be specified.
.TP
.BR subblock  "=" \fIsub-def\fP
subblock definition names.
This option may appear an unlimited number of times.
.sp
This option is used to create shorthand entries for nested definitions.
For example, with:
.sp
.IR "using subblock thus"
\fB--subblock=arg=argname,type,null\fP
.sp
.IR "and defining an \fBarg\fP thus"
\fBarg: this, char *\fP
.sp
.IR "will then expand to:"
\fBarg = { argname = this; type = "char *"; \fP;}
.br
The "this, char *" string is separated at the commas, with the
white space removed.  You may use characters other than commas by
starting the value string with a punctuation character other than
a single or double quote character.  You may also omit intermediate
values by placing the commas next to each other with no intervening
white space.  For example, "+mumble++yes+" will expand to:
.br
\fBarg = { argname = mumble; null = "yes"; \fP;}.
.TP
.BR listattr  "=" \fIdef\fP
attribute with list of values.
This option may appear an unlimited number of times.
.sp
This option is used to create shorthand entries for definitions
that generally appear several times.  That is, they tend to be
a list of values.  For example, with:
.br
\fBlistattr=foo\fP defined, the text:
.br
\fBfoo: this, is, a, multi-list\fP will then expand to:
.br
\fBfoo = 'this', 'is', 'a', 'multi-list';\fP
.br
The texts are separated by the commas, with the
white space removed.  You may use characters other than commas by
starting the value string with a punctuation character other than
a single or double quote character.
.TP
.BR filelist  [ =\fIfile\fP]
Insert source file names into defs.
.sp
Inserts the name of each input file into the output definitions.
If no argument is supplied, the format will be:
.nf
    infile = '%s';
.fi
If an argument is supplied, that string will be used for the entry
name instead of \fBinfile\fP.
.SS "Definition insertion options"
.TP
.BR assign  "=" \fIag-def\fP
Global assignments.
This option may appear an unlimited number of times.
.sp
The argument to each copy of this option will be inserted into
the output definitions, with only a semicolon attached.
.TP
.BR common-assign  "=" \fIag-def\fP
Assignments common to all blocks.
This option may appear an unlimited number of times.
.sp
The argument to each copy of this option will be inserted into
each output definition, with only a semicolon attached.
.TP
.BR copy  "=" \fIfile\fP
File(s) to copy into definitions.
This option may appear an unlimited number of times.
.sp
The content of each file named by these options will be inserted into
the output definitions.
.TP
.BR srcfile  [ =\fIfile\fP]
Insert source file name into each def.
.sp
Inserts the name of the input file where a definition was found
into the output definition.
If no argument is supplied, the format will be:
.nf
    srcfile = '%s';
.fi
If an argument is supplied, that string will be used for the entry
name instead of \fBsrcfile\fP.
.TP
.BR linenum  [ =\fIdef-name\fP]
Insert source line number into each def.
.sp
Inserts the line number in the input file where a definition
was found into the output definition.
If no argument is supplied, the format will be:
.nf
    linenum = '%s';
.fi
If an argument is supplied, that string will be used for the entry
name instead of \fBlinenum\fP.
.SS "Definition output disposition options:"
.TP
.BR output  "=" \fIfile\fP
Output file to open.
This option is a member of the autogen class of options.
.sp
If you are not sending the output to an AutoGen process,
you may name an output file instead.
.TP
.BR autogen  [ =\fIag-cmd\fP], " \fBno-autogen\fP"
Invoke AutoGen with defs.
The \fIno-autogen\fP form will disable the option.
This option is enabled by default.
This option is a member of the autogen class of options.
.sp
This is the default output mode.  Specifying \fBno-autogen\fP is
equivalent to \fBoutput=-\fP.  If you supply an argument to this
option, that program will be started as if it were AutoGen and
its standard in will be set to the output definitions of this program.
.TP
.BR template  "=" \fIfile\fP
Template Name.
.sp
Specifies the template name to be used for generating the final output.
.TP
.BR agarg  "=" \fIag-opt\fP
AutoGen Argument.
This option may appear an unlimited number of times.
This option must not appear in combination with any of the following options:
output.
.sp
This is a pass-through argument.  It allows you to specify any
arbitrary argument to be passed to AutoGen.
.TP
.BR base-name  "=" \fIname\fP
Base name for output file(s).
This option must not appear in combination with any of the following options:
output.
.sp
When output is going to AutoGen, a base name must either be supplied
or derived.  If this option is not supplied, then it is taken from
the \fBtemplate\fP option.  If that is not provided either, then
it is set to the base name of the current directory.
.TP
.BR help
Display extended usage information and exit.
.TP
.BR more-help
Extended usage information passed thru pager.
.TP
.BR save-opts "[=\fIrcfile\fP]"
Save the option state to \fIrcfile\fP.  The default is the \fIlast\fP
configuration file listed in the \fBOPTION PRESETS\fP section, below.
.TP
.BR load-opts "=\fIrcfile\fP," " \--no-load-opts"
Load options from \fIrcfile\fP.
The \fIno-load-opts\fP form will disable the loading
of earlier RC/INI files.  \fI--no-load-opts\fP is handled early,
out of order.
.TP
.BR version "[=\fI{v|c|n}\fP]"
Output version of program and exit.  The default mode is `v', a simple
version.  The `c' mode will print copyright information and `n' will
print the full copyright notice.
.SH OPTION PRESETS
Any option that is not marked as \fInot presettable\fP may be preset
by loading values from configuration ("RC" or ".INI") file(s).
The \fIhomerc\fP file is "\fI/dev/null\fP", unless that is a directory.
In that case, the file "\fI.getdefsrc\fP"
is searched for within that directory.
.SH "SEE ALSO"
This program is documented more fully in the Getdefs section
of the Add-On chapter in the
.IR AutoGen
Info system documentation.
.SH AUTHOR
Bruce Korb
.br
Please send bug reports to:  autogen-users@lists.sourceforge.net

.PP
Released under the GNU General Public License.
.PP
This manual page was \fIAutoGen\fP-erated from the \fBgetdefs\fP
option definitions.
