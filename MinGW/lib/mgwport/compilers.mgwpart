################################################################################
#
# compilers.mgwpart - mgwport compiler settings
#
# Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011 Yaakov Selkowitz
# Copyright (C) 2011 Charles Wilson
# Provided by the MinGW project <http://mingw.org/>
#
# mgwport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# mgwport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with mgwport.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

#****d* Compiling/CC
#  DESCRIPTION
#  The GCC C compiler.
#****
declare -x CC="gcc";

#****v* Compiling/CFLAGS
#  DESCRIPTION
#  Flags passed to CC when compiling C code.  Individual packages may append
#  or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x CFLAGS="-g -O2 -pipe ";

#****v* Compiling/CPPFLAGS
#  DESCRIPTION
#  Flags passed to the preprocessor.  Individual packages may append
#  or override this value if they will not build correctly without it.
#****
declare -x CPPFLAGS="";

#****d* Compiling/CXX
#  DESCRIPTION
#  The GCC C++ compiler.
#****
declare -x CXX="g++";

#****v* Compiling/CXXFLAGS
#  DESCRIPTION
#  Flags passed to CXX when compiling C++ code.  Individual packages may append
#  or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x CXXFLAGS="${CFLAGS}";

#****d* Compiling/F77
#  DESCRIPTION
#  The GCC Fortran 77 compiler.
#  SEE ALSO
#  FC
#****
declare -x F77="gfortran";

#****v* Compiling/FFLAGS
#  DESCRIPTION
#  Flags passed to F77 when compiling Fortran 77 code.  Individual packages may
#  append or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x FFLAGS="${CFLAGS}";

#****d* Compiling/FC
#  DESCRIPTION
#  The GCC Fortran 95 compiler.
#  SEE ALSO
#  F77
#****
declare -x FC="gfortran";

#****v* Compiling/FCFLAGS
#  DESCRIPTION
#  Flags passed to FC when compiling Fortran 95 code.  Individual packages may
#  append or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x FCFLAGS="${CFLAGS}";

#****d* Compiling/GCJ
#  DESCRIPTION
#  The GCC Java native-code compiler.
#  SEE ALSO
#  java.mgwclass
#****
declare -x GCJ="gcj";

#****v* Compiling/GCJFLAGS
#  DESCRIPTION
#  Flags passed to GCJ when native-compiling Java code.  Individual packages may
#  append or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x GCJFLAGS="${CFLAGS}";

#****d* Compiling/OBJC
#  DESCRIPTION
#  The GCC Objective C compiler.
#****
declare -x OBJC="${CC}";

#****v* Compiling/OBJCFLAGS
#  DESCRIPTION
#  Flags passed to OBJC when compiling Objective C code.  Individual packages
#  may append or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x OBJCFLAGS="${CFLAGS}";

#****d* Compiling/OBJCXX
#  DESCRIPTION
#  The GCC Objective C++ compiler.
#****
declare -x OBJCXX="${CXX}";

#****v* Compiling/OBJCXXFLAGS
#  DESCRIPTION
#  Flags passed to OBJCXX when compiling Objective C++ code.  Individual packages
#  may append or override this value if they will not build correctly without it.
#  DEFAULT VALUE
#  -g -O2 -pipe
#****
declare -x OBJCXXFLAGS="${CFLAGS}";

#****v* Compiling/LDFLAGS
#  DESCRIPTION
#  Flags passed to the linker.  Individual packages may append
#  or override this value if they will not build correctly without it.
#****
declare -x LDFLAGS="";

declare -x LIBS="";

OBJDUMP="objdump"
STRIP="strip"

# system triplets
declare    CBUILD=$(__canonicalize_triplet $(${_privgnuconfigdir}/config.guess))
case "${MPFLAVOR}" in
*mingw* )  declare CHOST=i686-pc-mingw32 ;;
*msys* )   declare CHOST=i686-pc-msys ;;
esac
declare    CTARGET=${CHOST};
declare    CROSS_HOST="";
declare    CROSS_SYSROOT="";
declare    TOOLCHAIN_TARGET="";

if [ ${CBUILD} != ${CHOST} ]
then
	CC=${CHOST}-gcc
	CXX=${CHOST}-g++
	F77=${CHOST}-gfortran
	FC=${CHOST}-gfortran
	GCJ=${CHOST}-gcj
	OBJC=${CHOST}-gcc
	OBJCXX=${CHOST}-g++
	OBJDUMP=${CHOST}-objdump
	STRIP=${CHOST}-strip

	# PKG_PROG_PKG_CONFIG looks for $host-pkg-config, but pkg-config is not
	# a "tool" that is built for each target like binutils or gcc.  Instead,
	# we set PKG_CONFIG_LIBDIR appropriately.
	# The PKG_CONFIG override silences a bogus warning during configure:
	# configure: WARNING: using cross tools not prefixed with host triplet
	export PKG_CONFIG="$(which pkg-config 2>/dev/null)"
	if ${CC} -print-sysroot 1>/dev/null 2>/dev/null
	then
		export PKG_CONFIG_LIBDIR="$(${CC} -print-sysroot)$(__target_prefix)/lib/pkgconfig:$(${CC} -print-sysroot)$(__target_prefix)/share/pkgconfig:$(__target_prefix)/share/pkgconfig"
	else
		export PKG_CONFIG_LIBDIR="/usr/${CHOST}/sys-root/$(__target_prefix)/lib/pkgconfig:/usr/${CHOST}/sys-root/$(__target_prefix)/share/pkgconfig:$(__target_prefix)/share/pkgconfig"
	fi
fi

case ${CHOST} in
  *-pc-mingw* )
	CFLAGS="${CFLAGS} -mms-bitfields"
	CXXFLAGS="${CXXFLAGS} -mms-bitfields"
	F77FLAGS="${F77FLAGS} -mms-bitfields"
	FCFLAGS="${FCFLAGS} -mms-bitfields"
	GCJFLAGS="${GCJFLAGS} -mms-bitfields"
	OBJCFLAGS="${OBJCFLAGS} -mms-bitfields"
	OBJCXXFLAGS="${OBJCXXFLAGS} -mms-bitfields"
	;;
  *-pc-msys* )
	opt_flags="-O3 -fno-unit-at-a-time -march=i386 -mtune=i686 -finline-functions"
	CPPFLAGS="${CPPFLAGS} -D__CYGWIN__"
	CFLAGS="${CFLAGS} ${opt_flags}"
	CXXFLAGS="${CXXFLAGS} ${opt_flags}"
	F77FLAGS="${F77FLAGS} ${opt_flags}"
	FCFLAGS="${FCFLAGS} ${opt_flags}"
	GCJFLAGS="${GCJFLAGS} ${opt_flags}"
	OBJCFLAGS="${OBJCFLAGS} ${opt_flags}"
	OBJCXXFLAGS="${OBJCXXFLAGS} ${opt_flags}"
	;;
esac
