mingw32 libarchive
========================================================================
Libarchive is a programming library that can create and read several
different streaming archive formats, including most popular tar
variants and several cpio formats. It can also write shar archives and
read ISO9660 CDROM images. The bsdtar program is an implementation of
tar(1) that is built on top of libarchive. It started as a test
harness, but has grown and is now the standard system tar for FreeBSD 5
and 6.

The libarchive library offers a number of features that make it both
very flexible and very powerful.

- Automatic format detection: libarchive can automatically determine
   both the compression and the archive format, regardless of the
   data source. Most tar implementations do not automatically detect
   the compression format, few implementation that can correctly do
   this when reading from stdin or a socket. (The tar program
   included with Gunnar Ritter's heirloom collection also does full
   automatic format detection.)

- Writes POSIX formats: libarchive writes POSIX-standard formats,
   including "ustar," "pax interchange format," and the POSIX "cpio"
   format.

- Supports pax interchange format: Pax interchange format (which,
   despite the name, is really an extended tar format) eliminates
   almost all limitations of historic tar formats and provides a
   standard method for incorporating vendor-specific extensions.
   libarchive exploits this extension mechanism to support ACLs and
   file flags, for example. (Joerg Schilling's star archiver is
   another open-source tar program that supports pax interchange
   format.)

- Reads popular formats: libarchive can read GNU tar, ustar, pax
   interchange format, cpio, and older tar variants. The internal
   architecture is easily extensible. The only requirement for
   support is that it be possible to read the format without seeking
   in the file. (For example, a format that includes a compressed
   size field before the data cannot be correctly written without
   seeking.)

- High-Level API: the libarchive API makes it fairly simple to build
   an archive from a list of filenames or to extract the entries
   from an archive. However, the API also provides extreme
   flexibility with regards to data sources. For example, there are
   generic hooks that allow you to write an archive to a socket or
   read data from an archive entry into a memory buffer.

- Extensible. The internal design uses generic interfaces for
   compression, archive format detection and decoding, and archive data
   I/O. It should be very easy to add new formats, new compression
   methods, or new ways of reading/writing archives.

This distribution incorporates pre-built binary components, which
have been specifically compiled for the "mingw32" subsystem; in
other words, they comprise binary executables and object libraries
suitable for native use on Microsoft's 32-bit Windows operating
system. As such, the libarchive packages should be installed into the
/mingw directory (which is usually, but not always, C:\MinGW).

Runtime requirements
  libz-1.2.3-1-mingw32-dll
  libbz2-1.0.5-2-mingw32-dll-2
  liblzma-4.999beta9_20100401-mingw32-dll-1
  libexpat-2.0.1-1-mingw32-dll-1

Build requirements (these, or newer)
  MinGW compiler
    binutils-2.20-1-mingw32-bin
    gcc-core-4.4.0-mingw32-bin
    gcc-core-4.4.0-mingw32-dll
    mingwrt-3.17-mingw32-dev
    mingwrt-3.17-mingw32-dll
    w32api-3.14-mingw32-dev
    gmp-4.2.4-mingw32-dll
    mpfr-2.4.1-mingw32-dll
 
  Devel Tools and Dependent Libraries 
    autoconf-7-1-mingw32-bin
    autoconf2.5-2.64-1-mingw32-bin
    automake-4-1-mingw32-bin
    automake1.10-1.10.2-1-mingw32-bin
    gettext-0.17-1-mingw32-bin
    gettext-0.17-1-mingw32-dev
    libgettextpo-0.17-1-mingw32-dll-0
    libtool-2.2.7a-1-mingw32-bin
    libz-1.2.3-1-mingw32-dev
    libbz2-1.0.5-2-mingw32-dev
    liblzma-4.999beta9_20100401-mingw32-dev
    libexpat-2.0.1-1-mingw32-dev

  MSYS Environment
    msysCORE-1.0.13-1-msys-1.0.13-bin
    coreutils-5.97-2-msys-1.0.11-bin
    bash-3.1.17-2-msys-1.0.11-bin
    make-3.81-2-msys-1.0.11-bin
    patch-2.5.9-1-msys-1.0.11-bin
    tar-1.22-1-msys-1.0.11-bin
    libbz2-1.0.5-2-msys-1.0.13-dll-1
    bzip2-1.0.5-2-msys-1.0.13-bin
    gzip-1.3.12-1-msys-1.0.11-bin
    sed-4.2.1-1-msys-1.0.11-bin
    gawk-3.1.7-1-msys-1.0.11-bin
    texinfo-4.13a-1-msys-1.0.11-bin
    file-5.03-1-msys-1.0.11-bin
    cvs-1.12.13-1-msys-1.0.11-bin
    perl-5.6.1_2-2-msys-1.0.13-bin
    libcrypt-1.1_1-3-msys-1.0.13-dll-0
    libgdbm-1.8.3-3-msys-1.0.13-dll-3
    zlib-1.2.3-2-msys-1.0.13-dll

Canonical homepage:
  http://code.google.com/p/libarchive/

Canonical download:
  http://code.google.com/p/libarchive/downloads/list

License:
  BSD (2-clause)
  BSD (3-clause)

Language:
  C

========================================================================

Build instructions:
  unpack libarchive-2.8.3-1-mingw32-src.tar.bz2
  cd libarchive-4.999.9beta/mingwPORT
  ./mingwPORT.sh [--no-cleanup] [--check]

This will create:
  bsdtar-2.8.3-1-mingw32-bin.tar.bz2
  bsdcpio-2.8.3-1-mingw32-bin.tar.bz2
  libarchive-2.8.3-1-mingw32-lic.tar.bz2
  libarchive-2.8.3-1-mingw32-doc.tar.bz2
  libarchive-2.8.3-1-mingw32-dll-2.tar.bz2
  libarchive-2.8.3-1-mingw32-dev.tar.bz2
  libarchive-2.8.3-1-mingw32-src.tar.bz2

========================================================================

Test suite results
This section of this document is updated with each new release.
No history is maintained here.

libarchive_test:
------------------------------
Totals:
  Tests run:              106
  Tests failed:             1
  Assertions checked: 2823906
  Assertions failed:        1
  Skips reported:          12

Failing tests (details):
  81: test_write_compress_program (1 failures)
test_write_compress_program
.../libarchive/test/test_write_compress_program.c:78:
   Assertion failed: 0 == archive_write_close(a)
   detail: Filter exited with failure.

bsdtar_test:
------------------------------
Totals:
  Tests run:               16
  Tests failed:             1
  Assertions checked:    2791
  Assertions failed:        4
  Skips reported:           4

Failing tests:
  15: test_windows (4 failures)
  bld/.libs/bsdtar.exe: //file1: Cannot stat: No such file or directory

bsdcpio_test:
------------------------------
Totals:
  Tests run:               27
  Tests failed:             1
  Assertions checked:     783
  Assertions failed:       44
  Skips reported:           3

Failing tests:
  4: test_gcpio_compat (44 failures)
  (actually a bug in the testsuite; the test data files for platforms
  without symbolic links are missing)

========================================================================

Port Notes:
----------  libarchive-2.8.3-1 -- 2010 Apr 10 -----------
* Initial combined release for MinGW
  (should not be confused with standalone "static" basic-bsdtar)

