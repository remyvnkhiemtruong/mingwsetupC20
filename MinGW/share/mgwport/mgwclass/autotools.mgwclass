################################################################################
#
# autotools.mgwclass - functions for building autotool-based packages
#
# Part of mgwport - MinGW/MSYS packaging application
# Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011 Yaakov Selkowitz
# Copyright (C) 2011 Charles Wilson
# Provided by the MinGW project <http://mingw.org/>
#
# mgwport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# mgwport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with mgwport.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

#****h* mgwclasses/autotools.mgwclass
#  DESCRIPTION
#  GNU Autotools (comprising of Gettext, Autoconf, Automake, and Libtool)
#  comprise the build system of many source packages of all types.
#
#  This mgwclass provides the functions necessary to configure and build
#  autotool-based packages.  Since these are so widespread, this is the
#  assumed build system if no other is specified, and provides the default
#  src_compile accordingly.
#  NOTES
#  This mgwclass is automatically inherit()ed, so these functions are always
#  available automatically.
#
#  Normally, a mgwclass can only be inherited once.  Even though this
#  is auto-inherit()ed, it can still be manually inherit()ed once more if desired.
#  In most cases this is unnecessary, but it can be useful if you inherit
#  other mgwclasses but still want the default src_compile().  For example:
#    inherit perl autotools
#  provides all the PERL_* definitions and perl_*() functions, but will build
#  with mgwconf/mgwmake by default instead of with perl's ExtUtils::MakeMaker
#  or Module::Build.
#  INHERITED BY
#  No mgwclass actually inherit()s autotools.mgwclass for the reasons stated above,
#  but the functions defined herein are used by these mgwclasses:
#
#  toolchain.mgwclass
#****


#****C* autotools.mgwclass/mgwautoreconf
#  SYNOPSIS
#  mgwautoreconf
#  DESCRIPTION
#  Updates the autotool build system with autoreconf, which runs the tools
#  from autoconf, automake, gettext-devel, and libtool to update their
#  respective components.  Must be run in the directory containing the top-level
#  configure.ac or configure.in (usually $S).
#  NOTE
#  If, during mgwautoreconf, you get a warning such as:
#     Warning: ./configure.ac may require LT_OUTPUT macro
#  then the package configure script is relying on libtool 1.5 behaviour where
#  the libtool script is generated during AC_PROG_LIBTOOL, and can therefore
#  be called anytime thereafter in the configure script.  Some packages do this
#  either to read the libtool config, or to run compiling/linking tests with
#  the libtool script.
#
#  However, with the current libtool 2.2, the libtool script is generated during
#  the AC_OUTPUT phase at the end of configure, so these configure commands will
#  not work as designed.  The simplest portable solution is to add the
#  following line after the AC_PROG_LIBTOOL call:
#    m4_ifdef([LT_OUTPUT], [LT_OUTPUT])
#  which means: if libtool 2.2 is in use, generate a libtool script early so
#  that it can be used during configure; if libtool 1.5 is in use, this line has
#  no effect.  Such a patch is suitable to be pushed upstream.
#  WARNING
#  Skipping this step is strongly discouraged.  Patches to configure.ac, aclocal
#  macros, or Makefile.am files will not take effect until their tools have been
#  regenerated.  Also, MinGW/MSYS's libtool package often includes patches which
#  are not yet available in the latest upstream release, so libraries may not
#  be built optimally, or even correctly, without this step having been run.
#  REQUIRES
#  autoconf, automake, gettext-devel, libtool
#****
mgwautoreconf() {
	local d;
	local f;
	local f_in;
	local tool;
	local ac_config_files;
	local ac_config_headers;
	local ac_subdirs;
	local ac_ver;
	local configure_ac;
	local config_h;
	local config_h_in;
	local gettext_version;
	local sub_configure_ac;
	local gettextdir;

	__parse_aclocal_amflags() {
		for arg in $@
		do
			case $1 in
				-I) echo $2 ;;
			esac
			shift
		done
	}

	if [ -f configure.ac ]
	then
		configure_ac="configure.ac";
	elif [ -f configure.in ]
	then
		configure_ac="configure.in";
	else
		error "Could not find configure.ac or configure.in";
	fi

	__config_set with_autoconf 1

	ac_subdirs="$(grep 'AC_CONFIG_SUBDIRS*' ${configure_ac} | sed -e 's!.*AC_CONFIG_SUBDIRS*(\[*\(.*\))!\1!g' -e 's!\]*!!g')"

	for d in . ${ac_subdirs}
	do
		if [ -d ${d} ]
		then
			if [ -f ${d}/configure.ac ]
			then
				sub_configure_ac="${d}/configure.ac";
			elif [ -f ${d}/configure.in ]
			then
				sub_configure_ac="${d}/configure.in";
			else
				error "Could not find ${d}/configure.ac or ${d}/configure.in";
			fi

			# e.g. CVS checkouts
			if [ -f ${d}/configure ]
			then
				# Assure that autotool files are writable (e.g. less)
				eval $(grep -h '^ac_config_files=' ${d}/configure)
				# eval $(grep -h '^ac_config_headers=' ${d}/configure)

				chmod +wx ${d}/configure;

				for f in ${ac_config_files} ${ac_config_headers}
				do
					case ${f} in
						*:*)	f_in=${d}/${f#*:} ;;
						*)		f_in=${d}/${f}.in ;;
					esac

					if [ -e ${f_in} ]
					then
						chmod +w ${f_in};
					fi
				done

				unset ac_config_files;
			fi

			# sometimes ACLOCAL_AMFLAGS is defined but the given directory
			# exists only in VCS (or is created by an autogen.sh) and is
			# not shipped in the tarball
			if [ -f Makefile.am ]
			then
				__parse_aclocal_amflags $(grep '^ACLOCAL_AMFLAGS' Makefile.am) | xargs -r mkdir -p
			fi

			if [ ! -f ${d}/aclocal.m4 ] || $(head -n 1 ${d}/aclocal.m4 | grep -q 'generated.* by aclocal')
			then
				__config_set with_aclocal 1
			fi

			if $(grep -q 'AM_INIT_AUTOMAKE' ${sub_configure_ac})
			then
				__config_set with_automake 1
			fi

			if $(grep -Eq '(AM_GNU_GETTEXT|AM_ICONV|AC_GGZ_INTL)' ${sub_configure_ac})
			then
				gettextdir=$(which gettextize | sed -e 's|bin/gettextize||')share/gettext;
				cp -f ${gettextdir}/config.rpath ${d}/
				__config_set with_gnu_gettext 1
			fi

			if $(grep -Eq '(A[CM]_PROG_LIBTOOL|LT_INIT)' ${sub_configure_ac})
			then
				__config_set with_libtool 1
			fi

			if $(grep -q '\./libtool -' ${sub_configure_ac}) && ! $(grep -q 'LT_OUTPUT' ${sub_configure_ac})
			then
				warning "${sub_configure_ac} may require LT_OUTPUT macro"
			fi

			# Automake will exit if these are not present
			# dodoc won't install these, however, since they will be empty
			touch ${d}/{AUTHORS,ChangeLog,NEWS,README};

			# These required files can be overwritten by automake, so we
			# back them up now and restore them afterwards
			for f in COPYING INSTALL
			do
				if [ -f ${d}/${f} ]
				then
					cp ${d}/${f} ${d}/${f}.temp;
					chmod +w ${f}.temp;
				elif [ -d ${d}/${f} ]
				then
					:
				else
					touch ${d}/${f}
				fi
			done
		fi
	done

	check_prog_req autoreconf autoconf

#****v* mgwautoreconf/WANT_AUTOCONF
#  DESCRIPTION
#  This variable controls the version of autoconf to be used.  Valid settings
#  are "2.1" (for the 2.13 version) and "2.5" (the default, for the 2.5x/2.6x
#  series).
#****

#****v* mgwautoreconf/WANT_AUTOMAKE
#  DESCRIPTION
#  This variable controls the version of automake to be used.  Valid settings
#  are currently "1.4" through "1.11".  If undefined, the version used by
#  the preexisting automake files will be used; if nonexistant (e.g. a VCS
#  checkout), the newest available automake will be used.
#****
	export WANT_AUTOCONF;
	export WANT_AUTOMAKE;

	case "${WANT_AUTOCONF}" in
	2.1)
		check_prog_req autoconf-2.13 autoconf2.1

		if __config_equals with_libtool 1
		then
			warning "libtool is incompatible with autoconf-2.13";
		fi
		;;
	2.5|'')
		WANT_AUTOCONF=2.5

		case $(autoconf --version 2> /dev/null | head -n 1) in
			autoconf*2.[56]?) ;;
			*)	error "autoconf2.5 is required to build this package" ;;
		esac

		# libtool 2.2+ is incompatible with gettext before 0.17
		# config.rpath is broken wrt dynamic linkage before 0.17
		eval gettext_$(grep ^version= $(which autopoint))
		if ! __version_at_least 0.17 ${gettext_version}
		then
			error "cygautoreconf: at least gettext 0.17 required"
		fi
		AUTOPOINT="autopoint -V ${gettext_version}"

#****v* mgwautoreconf/NO_ACLOCAL
#  DESCRIPTION
#  Define this variable to a boolean true value to skip running aclocal
#  during mgwautoreconf.
#  WARNING
#  This is strongly discouraged, and should only be used when a package uses
#  its own aclocal macros which are not provided in the tarball *and* the
#  package does not use libtool.
#****
#****v* mgwautoreconf/NO_LIBTOOLIZE
#  DESCRIPTION
#  Define this variable to a boolean true value to skip running libtoolize
#  during mgwautoreconf.
#  WARNING
#  This is strongly discouraged.  MinGW/MSYS's libtool usually includes patches
#  required for optimal results on MinGW/MSYS which are not yet available in
#  even the most recent upstream releases.
#****
#****v* mgwautoreconf/NO_AUTOCONF
#  DESCRIPTION
#  Define this variable to a boolean true value to skip running autoconf
#  during mgwautoreconf.
#  WARNING
#  This is strongly discouraged.  Running libtoolize, changes to aclocal macros,
#  or changes to configure.ac/configure.in all require autoconf to be run for
#  a working build.
#****
#****v* mgwautoreconf/NO_AUTOHEADER
#  DESCRIPTION
#  Sometimes autoreconf thinks a package uses autoheader when in fact it does
#  not, in which case mgwautoreconf will fail during the autoheader stage.
#  In such cases, provided you have not patched any AC_DEFINEs, set this
#  variable to a boolean true value to skip the autoheader step.
#****
#****v* mgwautoreconf/NO_AUTOMAKE
#  DESCRIPTION
#  Define this variable to a boolean true value to skip running automake
#  during mgwautoreconf.
#  WARNING
#  This is strongly discouraged.  If aclocal and/or autoconf have been run,
#  running automake is required for a working build.
#****
#****v* mgwautoreconf/NO_AUTOPOINT
#  DESCRIPTION
#  Define this variable to a boolean true value to skip running autopoint
#  during mgwautoreconf.
#  WARNING
#  This is strongly discouraged.  MinGW/MSYS's gettext package often has patches
#  which are not yet available in even the latest official release, and earlier
#  versions of gettext are incompatible with the current libtool.
#****

		for tool in ACLOCAL LIBTOOLIZE AUTOCONF AUTOHEADER AUTOPOINT AUTOMAKE
		do
			if __arg_bool NO_${tool}
			then
				declare ${tool}=true
				__config_set with_$(echo ${tool} | tr '[:upper:]' '[:lower:]') 0
			fi
			export ${tool}
		done

		ACLOCAL=${ACLOCAL:-aclocal}

		if __cross_compiling
		then
			local sysrootaclocaldir
			if ${CC} -print-sysroot 1>/dev/null 2>/dev/null
			then
				sysrootaclocaldir=$(${CC} -print-sysroot)$(__target_prefix)/share/aclocal
			else
				sysrootaclocaldir=/usr/${CHOST}/sys-root/$(__target_prefix)/share/aclocal
			fi
			if [ -d ${sysrootaclocaldir} ]
			then
				ACLOCAL+=" -I ${sysrootaclocaldir}"
			fi
		fi

#****v* mgwautoreconf/ACLOCAL_FLAGS
#  DESCRIPTION
#  Set this variable when a package ships with its own aclocal macros but
#  their directory is not included when running aclocal during mgwautoreconf.
#  If needed, usually in the form "-I DIR" (where DIR is the relative subdirectory
#  containing the aclocal macros, often m4/).
#****
		if defined ACLOCAL_FLAGS
		then
			ACLOCAL+=" ${ACLOCAL_FLAGS}"
		fi
		;;
	*)
		error "illegal WANT_AUTOCONF value: ${WANT_AUTOCONF}"
		;;
	esac

	autoreconf --force -i --verbose || error "autoreconf failed"

	for d in . ${ac_subdirs}
	do
		if [ -d ${d} ]
		then
			if [ -f ${d}/configure.ac ]
			then
				sub_configure_ac="${d}/configure.ac";
			else
				sub_configure_ac="${d}/configure.in";
			fi

			config_h="$(grep 'A[CM]_CONFIG_HEADERS*' ${sub_configure_ac} | sed -e 's!A[CM]_CONFIG_HEADERS*(\[*\(.*\))!\1!g' -e 's!\]*!!g')";

			if defined config_h
			then
				__config_set with_autoheader 1
			fi

			case "${config_h}" in
				'') config_h_in= ;;
				*:*) config_h_in="$(echo "${config_h//:/ }" | cut -d ' ' -f 2-)" ;;
				*) config_h_in="${config_h}.in" ;;
			esac

			for f in ${config_h_in}
			do
				if [ -e ${d}/${f} ]
				then
					touch ${d}/${f}
				fi
			done

			for f in COPYING INSTALL
			do
				if [ -f ${d}/${f}.temp ]
				then
					mv -f ${d}/${f}.temp ${d}/${f};
				fi
			done
		fi
	done

	unset -f __parse_aclocal_amflags
}

#****C* autotools.mgwclass/mgwconf
#  SYNOPSIS
#  mgwconf [CONFIGURE_FLAG] [CONFIGURE_FLAG] ...
#  DESCRIPTION
#  Runs the configure script for the package.  mgwconf passes configure the flags
#  necessary to install the package into the /usr prefix and according to the
#  |html <a href="http://www.pathname.com/fhs/">Filesystem Hierarchy Standard</a> and the
#  generally accepted MinGW/MSYS packaging conventions (unfortunately these are not
#  formally documented).
#  In addition, all arguments to mgwconf are passed to configure, followed by
#  MGWCONF_ARGS, if set.
#  NOTES
#  * mgwconf should be run in or under $B, as it defines the build directory of
#    the package and creates numerous files.
#  * If the configure script is not in $S, see MGWCONF_SOURCE.
#  * mgwconf is intended for configure scripts generated by, or compatible with,
#    autoconf.  Packages with handwritten configure scripts may not accept all
#    the flags used by mgwconf, in which case a direct call to the configure
#    script is in order.
#****
mgwconf() {
	local ac_config_files;
	local ac_config_headers;
	local confargs;
	local confdir;
	local configure;
	local confver;
	local f;
	local foo_config;
	local prefix;
	local nprefix;
	local sysconfdir;
	local nsysconfdir;
	local localstatedir;
	local nlocalstatedir;

#****v* mgwconf/MGWCONF_SOURCE
#  DESCRIPTION
#  Set this variable to the directory containing the configure script.  This
#  is only necessary when configure is not in $S and mgwconf is not being run
#  in the same subdirectory of $B which under $S contains configure.  (IOW if
#  the configure script is in $S/unix and mgwconf is run from $B/unix, setting
#  MGWCONF_SOURCE would not be necessary.)
#****
	if defined MGWCONF_SOURCE
	then
		if [ -x ${MGWCONF_SOURCE}/configure ]
		then
			confdir=${MGWCONF_SOURCE};
		else
			error "MGWCONF_SOURCE defined but no configure script found"
		fi
	elif [ -x ${PWD/${B}/${S}}/configure ]
	then
		confdir=${PWD/${B}/${S}};
	elif [ -x ${S}/configure ]
	then
		confdir=${S};
	else
		error "no configure script found";
	fi

	configure="${confdir}/configure"
	confver=$(grep -m 1 'GNU Autoconf' ${configure} | cut -d ' ' -f 6)

	# AC_CONFIG_FILES should not be dist'ed, but it sometimes happens anyway
	eval $(grep -h '^ac_config_files=' ${configure})
	eval $(grep -h '^ac_config_headers=' ${configure})

	for f in ${ac_config_files} ${ac_config_headers}
	do
		if [ -f ${confdir}/${f} ]
		then
			inform "Removing ${f} to be regenerated by configure"
			rm -f ${confdir}/${f}
			ln -sf ${confdir/${S}/${B}}/${f} ${confdir}/${f}
		fi
	done

	prefix=$(__host_prefix)
	nprefix=$(__host_nprefix)
	sysconfdir=$(__host_sysconfdir)
	nsysconfdir=$(__host_nsysconfdir)
	localstatedir=$(__host_localstatedir)
	nlocalstatedir=$(__host_nlocalstatedir)
	if [ "${prefix}" != "${nprefix}" ] && defined _MGWPORT_RESTRICT_native_prefix_
	then
		inform "Using prefix=${prefix} rather than ${nprefix} by request."
	else
		# This is actually the default case
		prefix="${nprefix}"
		sysconfdir="${nsysconfdir}"
		localstatedir="${nlocalstatedir}"
	fi

	# Set default configure arguments
	confargs="--prefix=${prefix} --exec-prefix=${prefix} --bindir=${prefix}/bin \
			  --sbindir=${prefix}/sbin --libexecdir=${prefix}/lib \
			  --datadir=${prefix}/share --localstatedir=${localstatedir} \
			  --sysconfdir=${sysconfdir}"

	case "x${confver}" in
		x2.6[0-9]*)
			confargs+=" --datarootdir=${prefix}/share --docdir=${prefix}/share/doc/${PN}/${PV}"
			;;
		*)
			confargs+=" --infodir=${prefix}/share/info --mandir=${prefix}/share/man"
			;;
	esac

	case "x${confver}" in
		x2.[5-9]*)	confargs+=" -C" ;;
	esac

	if __cross_compiling
	then
		confargs+=" --build=${CBUILD} --host=${CHOST} --target=${CTARGET}"

		for foo_config in $(ls $(__host_prefix)/bin/*[-_]config 2>/dev/null)
		do
			export $(echo ${foo_config##*/} | tr "a-z+-\." "A-ZX__")=$foo_config
		done
	fi

	# AC_HAVE_MMAP fails despite a working mmap, so we force this to yes
	# (see http://www.cygwin.com/ml/cygwin/2004-09/msg00741.html
	# and following thread for details)
	case ${CHOST} in
	*-*-cygwin*)
		export ac_cv_func_mmap_fixed_mapped=yes ;;
	esac

	if inherited relocatable
	then
		confargs+=" --enable-relocatable"
	fi

#****v* mgwconf/MGWCONF_ARGS
#  DESCRIPTION
#  Additional flags to pass to configure, as a string.
#  NOTES
#  Flags in MGWCONF_ARGS follow, and therefore override, flags passed by default
#  and as arguments to mgwconf.
#****

	verbose ${configure} \
		--srcdir="${confdir}" ${confargs} "${@}" ${MGWCONF_ARGS} \
		|| error "configure failed"
}

#****o* autotools.mgwclass/src_compile (autotools)
#  DEFINITION
src_compile() {
	cd ${S}
	mgwautoreconf
	cd ${B}
	mgwconf
	mgwmake
}
#****

if ! defined _autotools_MGWCLASS_stage1_
then
	readonly -f mgwautoreconf mgwconf
fi
